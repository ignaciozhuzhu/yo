'use strict';
import React from 'react';
import ReactDOM from 'react-dom';
// import * as Common from './Common.js';
import {
	thisurl,
	serviceurl,
	ipurl,
	downDistance,
	setCookie,
	getCookie,
	delCookie,
	getURLPram,
	clearCookies,
	getCityIDByName,
	reminder,
	reminderSuccess,
	getLocalTime,
	checknull,
	MoneyConversion,
	MoneyValue,
	toDecimal,
	getMobilTime,
	plusZero,
  downloadurl
} from '../../js/common.js';

//轮播功能
var Slider = React.createClass({
  getDefaultProps() {
    return {
      loop: false,
      selected: 0,
      showArrows: true,
      showNav: true,
    };
  },
  getInitialState() {
    return {
      dragStart: 0,
      dragStartTime: new Date(),
      index: 0,
      lastIndex: 0,
      transition: false,
    };
  },
  componentWillMount() {
    const { selected } = this.props;
    this.setState({
      index: selected,
      lastIndex: selected,
    });
  },
  componentWillReceiveProps(nextProps) {
    const { selected } = this.props;

    if (selected !== nextProps.selected) {
      this.goToSlide(nextProps.selected);
    }
  },

  getDragX(event, isTouch) {
    return isTouch ?
      event.touches[0].pageX :
      event.pageX;
  },
  handleDragStart(event, isTouch) {
    const x = this.getDragX(event, isTouch);

    this.setState({
      dragStart: x,
      dragStartTime: new Date(),
      transition: false,
      slideWidth: ReactDOM.findDOMNode(this.refs.slider).offsetWidth,
    });
  },
  handleDragMove(event, isTouch) {
    const {
      dragStart,
      lastIndex,
      slideWidth,
    } = this.state;
    const x = this.getDragX(event, isTouch);
    const offset = dragStart - x;
    const percentageOffset = offset / slideWidth;
    const newIndex = lastIndex + percentageOffset;
    const SCROLL_OFFSET_TO_STOP_SCROLL = 30;
    // Stop scrolling if you slide more than 30 pixels
    if (Math.abs(offset) > SCROLL_OFFSET_TO_STOP_SCROLL) {
      event.stopPropagation();
      event.preventDefault();
    }
    this.setState({
      index: newIndex,
    });
  },
  handleDragEnd() {
    const {
      children,
    } = this.props;
    const {
      dragStartTime,
      index,
      lastIndex,
    } = this.state;
    const timeElapsed = new Date().getTime() - dragStartTime.getTime();
    const offset = lastIndex - index;
    const velocity = Math.round(offset / timeElapsed * 10000);
    let newIndex = Math.round(index);
    if (Math.abs(velocity) > 5) {
      newIndex = velocity < 0 ? lastIndex + 1 : lastIndex - 1;
    }

    if (newIndex < 0) {
      newIndex = 0;
    } else if (newIndex >= children.length) {
      newIndex = children.length - 1;
    }
    this.setState({
      dragStart: 0,
      index: newIndex,
      lastIndex: newIndex,
      transition: true,
    });
  },
  goToSlide(index, event) {
    const {
      children,
      loop,
    } = this.props;
    if (event) {
      event.preventDefault();
      event.stopPropagation();
    }
    if (index < 0) {
      index = loop ? children.length - 1 : 0;
    } else if (index >= children.length) {
      index = loop ? 0 : children.length - 1;
    }
    this.setState({
      index: index,
      lastIndex: index,
      transition: true,
    })
  },
  renderNav() {
    const { children } = this.props;
    const { lastIndex } = this.state;
    const nav = children.map((slide, i) => {
      const buttonClasses = i === lastIndex ? 'Slider-navButton Slider-navButton--active' : 'Slider-navButton';
      return (
        <button
          className={ buttonClasses }
          key={ i }
          onClick={ (event) => this.goToSlide(i, event) } />
      );
    })
    return (
      <div className='Slider-nav'>{ nav }</div>
    );
  },

  renderArrows() {
    const {
      children,
      loop,
      showNav,
    } = this.props;
    const { lastIndex } = this.state;
    const arrowsClasses = showNav ? 'Slider-arrows' : 'Slider-arrows Slider-arrows--noNav';

    return (
      <div className={ arrowsClasses }>
        { loop || lastIndex > 0 ?
          <button
            className='Slider-arrow Slider-arrow--left'
            onClick={ (event) => this.goToSlide(lastIndex - 1, event) } /> : null }
        { loop || lastIndex < children.length - 1 ?
          <button
            className='Slider-arrow Slider-arrow--right'
            onClick={ (event) => this.goToSlide(lastIndex + 1, event) } /> : null }
      </div>
    );
  },

  render() {
    const {
      children,
      showArrows,
      showNav,
    } = this.props;
    const {
      index,
      transition,
    } = this.state;
    const slidesStyles = {
      width: `${ 100 * children.length }%`,
      transform: `translateX(${ -1 * index * (100 / children.length) }%)`,
    };
    const slidesClasses = transition ? 'Slider-slides Slider-slides--transition' : 'Slider-slides';

    return (
      <div className='Slider' ref='slider'>
        { showArrows ? this.renderArrows() : null }
        { showNav ? this.renderNav() : null }

        <div
          className='Slider-inner'
          onTouchStart={ (event) => this.handleDragStart(event, true) }
          onTouchMove={ (event) => this.handleDragMove(event, true) }
          onTouchEnd={ () => this.handleDragEnd(true) }>
          <div
            className={ slidesClasses }
            style={ slidesStyles }>
            { children }
          </div>
        </div>
      </div>
    );
  }
});

var ExampleSlider = React.createClass({
  render() {
    return (
      <div className='ExampleSliders'>
        <Slider>
          <div><img src="../personal/images/pic_main_home_banner.png" width="100%"/></div>
          <div><img src="../personal/images/pic_main_home_banner.png" width="100%"/></div>
          <div><img src="../personal/images/pic_main_home_banner.png" width="100%"/></div>
          <div><img src="../personal/images/pic_main_home_banner.png" width="100%"/></div>
        </Slider>
      </div>
    );
  }
});









var Hospitalid = "";
var Personal_mainBox = React.createClass({
  getInitialState: function() {
    return {data: []};
  },
  componentDidMount: function(){
 //  	$("#b03").unslider({
	// 	dots: true
	// });
	var latitude = "";
	var longitude = "";
	navigator.geolocation.getCurrentPosition( // 该函数有如下三个参数
        function(pos){ // 如果成果则执行该回调函数
            // alert(
            //     '  经度：' + pos.coords.latitude +
            //     '  纬度：' + pos.coords.longitude +
            //     '  高度：' + pos.coords.altitude +
            //     '  精确度(经纬)：' + pos.coords.accuracy +
            //     '  精确度(高度)：' + pos.coords.altitudeAccuracy +
            //     '  速度：' + pos.coords.speed
            // );
            latitude = pos.coords.latitude;
            longitude = pos.coords.longitude;
            //alert("latitude: " + latitude + "  longitude: " + longitude);
           $.ajax({
                url: serviceurl+"hospital/getCurrHospital",
                dataType: 'json',
                cache: false,
                data : { 
                  "pointX" : longitude,
                  "pointY" : latitude
                },
                contentType : "application/json",
                type : "get", 
                async: false,
                success: function(data) {
                  console.log("weizhi: " + JSON.stringify(data)); 
                  if( data.status == "success"){
                    Hospitalid = data.data.id;
                 //医院信息
                    
                  }else if( data.status == "fail"){
                      reminder("医院信息查询失败！");
                      return;
                  }else{
                      reminder("医院信息查询错误！");
                      return;
                  }
                }.bind(this),
                error: function(xhr, status, err) {
                  console.error(xhr, status, err.toString());
                }.bind(this)
              });
        }, function(err){ // 如果失败则执行该回调函数
            reminder(err.message);
        }, { // 附带参数
            enableHighAccuracy: false, // 提高精度(耗费资源)
            timeout: 3000, // 超过timeout则调用失败的回调函数
            maximumAge: 1000 // 获取到的地理信息的有效期，超过有效期则重新获取一次位置信息
        }
    );
  },
  mainClick: function(){
  	//主页
    delCookie("gobackURL");
    setCookie("gobackURL", ipurl + "/per_index.html", 30);
    location.href="per_index.html";
  },
  orderClick: function(){
  	//我的订单
    delCookie("gobackURL");
    setCookie("gobackURL", ipurl + "/per_index.html", 30);
    location.href="per_mypay.html";
  },
  messageClick: function(){
    if(confirm("该功能需要下载app，是否下载？")){
      //消息点击
      delCookie("gobackURL");
      setCookie("gobackURL", ipurl + "/per_index.html", 30);
      location.href=downloadurl;
    }else{
      return;
    }
  },
  meClick: function(){
  	//我点击事件
    delCookie("gobackURL");
    setCookie("gobackURL", ipurl + "/per_index.html", 30);
    location.href="personal.html";
  },
  goHospital: function(){
  	//预约挂号
  	delCookie("gobackURL");
    setCookie("gobackURL", ipurl + "/per_index.html", 30);
    location.href="../reservation/reservation_hos.html";
  },
  goDoctor: function(){
  	//查找医生
  	delCookie("gobackURL");
    setCookie("gobackURL", ipurl + "/per_index.html", 30);
    location.href="../search/search.html";
  },
  goDownloadApp: function(){
  	//下载app
  	delCookie("gobackURL");
    setCookie("gobackURL", ipurl + "/per_index.html", 30);
    location.href="http://yayi365.cn";
  },
  goDetail: function(){
  	//进入快速预约
  	delCookie("gobackURL");
    setCookie("gobackURL", ipurl + "/per_index.html", 30);
    // location.href="../reservation/reservation_hos_info.html";
    if(Hospitalid==""){
      reminder("还没有定位到医院，请稍等");
      return;
    }else{
      location.href="../reservation/reservation_doc.html?hospitalID="+Hospitalid;
    }
  },
  goConsult:function(){
    reminder("该功能下一版本上线，敬请关注");
    return;
  },
  render: function() {
    return (
		<div className="weui_tab"> 
			<div className="weui_tab_bd">
				<ExampleSlider />

				<div className="cell pointer" onClick={this.goDetail}>
					<div className="bd">
						<div className="weui_cells tmargin0">
							<div className="weui_cell per_index_padding">
					            <div className="weui_cell_hd"><img src="images/pinpoint.png" className="text-align per_index_goHos_img" /></div>
					            <div className="weui_cell_bd weui_cell_primary">
					                <p className="fontsize15 lmargin1">点击进入当前医院，快速预约</p>
					            </div>
					            <div className="weui_cell_ft"></div>
					        </div>
						</div>
					</div>
				</div>

				<div className="panel tmargin1">
					<div className="bd">
						<div className="weui_panel weui_panel_access">

							<div className="weui_panel_bd width40 pull-left per_index_lbox" onClick={this.goHospital}>
								<a href="#" className="weui_media_box weui_media_appmsg">
					                <div className="width100 text-align tmargin1">
					                    <img className="weui_media_appmsg_thumb per_index_limg" src="images/s3@3x.png"/>
					                    <h4 className="weui_media_title text-align tmargin1">预约挂号</h4>
					                    <p className="weui_media_desc text-align tmargin05 color-3c">轻松预约只需三步。</p>
					                </div>
					            </a>
							</div>

							<div className="weui_panel_bd width60 pull-left per_index_rbox">
								<a href="#" className="weui_media_box weui_media_appmsg borderbottom borderleft" onClick={this.goConsult}>
  	                <div className="weui_media_bd">
  	                    <h4 className="weui_media_title">免费咨询</h4>
  	                    <p className="weui_media_desc color-3c">口腔问题随心问</p>
  	                </div>
  	                <div className="weui_media_hd rmargin0">
  	                    <img className="weui_media_appmsg_thumb per_index_rimg" src="images/s2@2x.png" />
  	                </div>
  	            </a>
  	            <a href="#" className="weui_media_box weui_media_appmsg borderleft sec_box" onClick={this.goDoctor}>
  	                
  	                <div className="weui_media_bd">
  	                    <h4 className="weui_media_title">查找医生</h4>
  	                    <p className="weui_media_desc color-3c">精确查找轻松就医</p>
  	                </div>
  	                <div className="weui_media_hd rmargin0">
  	                    <img className="weui_media_appmsg_thumb per_index_rimg" src="images/s1@3x.png" />
  	                </div>
  	            </a>
							</div>
						</div>
					</div>
				</div>

				<div className="weui_grids no-border tmargin1 pointer" onClick={this.goConsult}>
				    <img src="images/s4.png" width="100%" />
				</div>
		    </div>

		    <div className="weui_tabbar">
		        <div className="weui_tabbar_item per-foot-nav pointer" onClick={this.mainClick}>
			            <div className="weui_tabbar_icon">
			                <img src="images/ic_home_main_checked.png" className="height-auto"/>
			            </div>
			            <p className="weui_tabbar_label yayi-color">牙艺</p>
			        </div>
			        <div  className="weui_tabbar_item per-foot-nav pointer" onClick={this.orderClick}>
			            <div className="weui_tabbar_icon">
			                <img src="images/ic_home_pay.png" className="height-auto"/>
			            </div>
			            <p className="weui_tabbar_label">支付</p>
			        </div>
			        <div  className="weui_tabbar_item per-foot-nav pointer" onClick={this.messageClick}>
			            <div className="weui_tabbar_icon">
			                <img src="images/ic_home_notice.png" className="height-auto"/>
			            </div>
			            <p className="weui_tabbar_label">消息</p>
			        </div>
			        <div  className="weui_tabbar_item per-foot-nav pointer" onClick={this.meClick}>
			            <div className="weui_tabbar_icon">
			                <img src="images/ic_home_me.png" className="height-auto"/>
			            </div>
			            <p className="weui_tabbar_label">我</p>
			        </div>
		    </div>

		    <div id="loading-toast" ref="loading-toast" className="weui_loading_toast displaynone">
	          <div className="weui_mask_transparent"></div>
	          <div className="weui_toast">
	            <div className="weui_loading">
	              <div className="weui_loading_leaf weui_loading_leaf_0"></div>
	              <div className="weui_loading_leaf weui_loading_leaf_1"></div>
	              <div className="weui_loading_leaf weui_loading_leaf_2"></div>
	              <div className="weui_loading_leaf weui_loading_leaf_3"></div>
	              <div className="weui_loading_leaf weui_loading_leaf_4"></div>
	              <div className="weui_loading_leaf weui_loading_leaf_5"></div>
	              <div className="weui_loading_leaf weui_loading_leaf_6"></div>
	              <div className="weui_loading_leaf weui_loading_leaf_7"></div>
	              <div className="weui_loading_leaf weui_loading_leaf_8"></div>
	              <div className="weui_loading_leaf weui_loading_leaf_9"></div>
	              <div className="weui_loading_leaf weui_loading_leaf_10"></div>
	              <div className="weui_loading_leaf weui_loading_leaf_11"></div>
	            </div>
	            <p className="weui_toast_content text-align" id="loading-toast-text">正在查询</p>
	          </div>
	        </div>

	        <div id="success-toast" className="displaynone">
	          <div className="weui_mask_transparent" id="success-toast-mask"></div>
	          <div className="weui_toast">
	            <i className="weui_icon_toast"></i>
	            <p className="weui_toast_content text-align" id="success-toast-text"></p>
	          </div>
	        </div>

	        <div id="fail-toast" className="displaynone">
	          <div className="weui_mask_transparent" id="fail-toast-mask"></div>
	          <div className="weui_toast_fail">
	            <p className="text-align" id="fail-toast-text"></p>
	          </div>
	        </div>
		</div>
    );
  }
});


ReactDOM.render(
  <Personal_mainBox />,
  document.getElementById('content')
);




